<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserVerificationDao">
  <resultMap id="BaseResultMap" type="com.pojo.UserVerification">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="LoginType" jdbcType="INTEGER" property="logintype" />
    <result column="LoginToken" jdbcType="VARCHAR" property="logintoken" />
    <result column="PasswordToken" jdbcType="VARCHAR" property="passwordtoken" />
    <result column="Staus" jdbcType="INTEGER" property="staus" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, UserId, LoginType, LoginToken, PasswordToken, Staus
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userverification
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userverification
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUserId" parameterType="java.lang.Integer">
    delete from
      user_verification
    where Id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Id" keyProperty="id" parameterType="com.pojo.UserVerification" useGeneratedKeys="true">
    insert into userverification (UserId, LoginType, LoginToken, 
      PasswordToken, Staus)
    values (#{userid,jdbcType=INTEGER}, #{logintype,jdbcType=INTEGER}, #{logintoken,jdbcType=VARCHAR}, 
      #{passwordtoken,jdbcType=VARCHAR}, #{staus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="Id" keyProperty="id" parameterType="com.pojo.UserVerification" useGeneratedKeys="true">
    insert into userverification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="logintype != null">
        LoginType,
      </if>
      <if test="logintoken != null">
        LoginToken,
      </if>
      <if test="passwordtoken != null">
        PasswordToken,
      </if>
      <if test="staus != null">
        Staus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="logintype != null">
        #{logintype,jdbcType=INTEGER},
      </if>
      <if test="logintoken != null">
        #{logintoken,jdbcType=VARCHAR},
      </if>
      <if test="passwordtoken != null">
        #{passwordtoken,jdbcType=VARCHAR},
      </if>
      <if test="staus != null">
        #{staus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.UserVerification">
    update userverification
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="logintype != null">
        LoginType = #{logintype,jdbcType=INTEGER},
      </if>
      <if test="logintoken != null">
        LoginToken = #{logintoken,jdbcType=VARCHAR},
      </if>
      <if test="passwordtoken != null">
        PasswordToken = #{passwordtoken,jdbcType=VARCHAR},
      </if>
      <if test="staus != null">
        Staus = #{staus,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.UserVerification">
    update userverification
    set UserId = #{userid,jdbcType=INTEGER},
      LoginType = #{logintype,jdbcType=INTEGER},
      LoginToken = #{logintoken,jdbcType=VARCHAR},
      PasswordToken = #{passwordtoken,jdbcType=VARCHAR},
      Staus = #{staus,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePassword" parameterType="com.pojo.UserVerification">
    update user_verification
    <set>
      <if test="passwordToken != null">
        password_token = #{passwordToken,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByUserId" parameterType="com.pojo.UserVerification">
    update userverification
    set
      LoginType = #{loginType,jdbcType=INTEGER},
      LoginToken
                 =#{loginToken,jdbcType=VARCHAR}
    where Id =
          #{uId,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultType="com.pojo.UserVerification">
    SELECT * FROM userverification
    ORDER BY Id DESC
  </select>
  <select id="login" parameterType="com.pojo.UserVerification"
          resultType="com.pojo.UserVerification">
    SELECT * FROM userverification WHERE LoginToken =
                                          #{loginToken,jdbcType=VARCHAR} AND PasswordToken =
                                                                             #{passwordToken,jdbcType=VARCHAR}
  </select>
</mapper>