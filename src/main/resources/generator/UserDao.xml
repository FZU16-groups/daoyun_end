<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.pojo.User">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserNumber" jdbcType="VARCHAR" property="usernumber" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="UserPhone" jdbcType="VARCHAR" property="userphone" />
    <result column="UserEmail" jdbcType="VARCHAR" property="useremail" />
    <result column="CreationDate" jdbcType="TIMESTAMP" property="creationdate" />
    <result column="Status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, UserNumber, UserName, UserPhone, UserEmail, CreationDate, `Status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserNumber" parameterType="java.lang.String"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where UserNumber = #{uNumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="Id" keyProperty="id" parameterType="com.pojo.User" useGeneratedKeys="true">
    insert into user (UserNumber, UserName, UserPhone, 
      UserEmail, CreationDate, `Status`
      )
    values (#{usernumber,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{userphone,jdbcType=VARCHAR}, 
      #{useremail,jdbcType=VARCHAR}, #{creationdate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="Id" keyProperty="id" parameterType="com.pojo.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usernumber != null">
        UserNumber,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="userphone != null">
        UserPhone,
      </if>
      <if test="useremail != null">
        UserEmail,
      </if>
      <if test="creationdate != null">
        CreationDate,
      </if>
      <if test="status != null">
        `Status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usernumber != null">
        #{usernumber,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null">
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null">
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="creationdate != null">
        #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.User">
    update user
    <set>
      <if test="usernumber != null">
        UserNumber = #{usernumber,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null">
        UserPhone = #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null">
        UserEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="creationdate != null">
        CreationDate = #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `Status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.User">
    update user
    set UserNumber = #{usernumber,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      UserPhone = #{userphone,jdbcType=VARCHAR},
      UserEmail = #{useremail,jdbcType=VARCHAR},
      CreationDate = #{creationdate,jdbcType=TIMESTAMP},
      `Status` = #{status,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultType="com.pojo.User">
    SELECT u.*,p.Id FROM user u
                              left outer join person p on u.Id = p.Id WHERE status
                                                                                  > 0 ORDER BY
      u.Id DESC;
  </select>
</mapper>